smanifold, Copyright (C) 2009-2012, Stefan Sommer (sommer@diku.dk)
https://github.com/nefan/smanifold.git

--------------------------------------------------------------------------------

    This file is part of smanifold.

    smanifold is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    smanifold is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with smanifold.  If not, see <http://www.gnu.org/licenses/>.
 
--------------------------------------------------------------------------------

smanifold v. 0.1.

The project website is https://github.com/nefan/smanifold.git

Stefan Sommer (sommer@diku.dk), May 2012.

Credits:
If you use the code, please cite relevant articles from
'http://image.diku.dk/sommer', e.g. the paper http://arxiv.org/abs/1008.1902

License:
Everything here is GPL.

Installation instructions:
See INSTALL file.

Documentation:
Except for this file, not existing :-)

News:
May 2012: v0.1 release.


Structure:
Code in the directory 'code'.
Examples in the directory 'examples'.
Third party code in the directory 'thirdparty'.

The functions Exp, Log, and LogInit created by ExpLogMaps constitute the
exponential map, log map, and log map given initial (non-geodesic) curve
respectively. 

Examples:
The files 'surfacePGA.m' and 'quadraticPGA.m' in the examples/ directory
produces results equivalent to the ones found in the paper
http://arxiv.org/abs/1008.1902



Vertebra stuff:
Will be added if necessary - below info is in case this happens.

main file: runVertebra.m
    does calls to the various computation steps being
        runLoad() - load the data
        create the manifold data structure and functions (Exp/Log maps)
        runProjection() - project data from embedded space to manifold
        runRegister() - center shapes and rotate
        runMean() - compute mean of data
        runPGA() - compute PGA

The list "markers" indicate the number of points on each segment between markers
points. 

output format:
    Note first that not all output is currently available, but will be added as
    computations are completed.

    Computation output is placed in subdirections of output/ . First level of
    subdirectories describes the parameteters used in the computation in the
    form
        normalize-#1-tol-#2
    Here #1 specifies which normalization method is used:
        0 : no normalization,
        1 : normalized to norm 1,
        2 : normalized to have distance 1 between first and last point.
    #2 specifies the tolerance, usually 0.01 for non-normalized data and 0.0001
    for normalized data.

    In each of those subdirectories reside three additional subdirectories being
        projection/ - the samples projected onto the submanifold,
        means/ - the computed intrinsic means,
        PGA/ - the PGA/PCA computation data.
    The contents of the projection/ directory is the same for all
    computations.

    All shapes are stored as column vectors in the format [x1, y1, x2, y2, ...].

